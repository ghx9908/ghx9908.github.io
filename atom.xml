<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>闪烁之狐</title>
  
  <subtitle>闪烁之狐</subtitle>
  <link href="https://ghx9908.github.io/atom.xml" rel="self"/>
  
  <link href="https://ghx9908.github.io/"/>
  <updated>2025-07-24T11:51:05.818Z</updated>
  <id>https://ghx9908.github.io/</id>
  
  <author>
    <name>高红翔</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mac配置</title>
    <link href="https://ghx9908.github.io/2025/07/23/mac-pei-zhi/"/>
    <id>https://ghx9908.github.io/2025/07/23/mac-pei-zhi/</id>
    <published>2025-07-23T13:53:06.000Z</published>
    <updated>2025-07-24T11:51:05.818Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;✅-一、系统级基础配置&quot;&gt;&lt;a href=&quot;#✅-一、系统级基础配置&quot; class=&quot;headerlink&quot; title=&quot;✅ 一、系统级基础配置&quot;&gt;&lt;/a&gt;✅ 一、系统级基础配置&lt;/h2&gt;&lt;h3 id=&quot;1-macOS-设置（建议手动设置）&quot;&gt;&lt;a</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Vue3中实现可重置的状态管理：useRestableRef与useRestableActive</title>
    <link href="https://ghx9908.github.io/2025/06/24/vue3-zhong-shi-xian-ke-chong-zhi-de-zhuang-tai-guan-li-userestableref-yu-userestableactive/"/>
    <id>https://ghx9908.github.io/2025/06/24/vue3-zhong-shi-xian-ke-chong-zhi-de-zhuang-tai-guan-li-userestableref-yu-userestableactive/</id>
    <published>2025-06-24T12:29:19.000Z</published>
    <updated>2025-07-24T11:51:05.818Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;在 Vue 3 的 Composition API</summary>
        
      
    
    
    
    <category term="前端基础" scheme="https://ghx9908.github.io/categories/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="Vue.js" scheme="https://ghx9908.github.io/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>eslint配置案例</title>
    <link href="https://ghx9908.github.io/2024/10/18/eslint-pei-zhi-an-li/"/>
    <id>https://ghx9908.github.io/2024/10/18/eslint-pei-zhi-an-li/</id>
    <published>2024-10-18T15:57:22.000Z</published>
    <updated>2025-07-24T11:51:05.818Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h3 id=&quot;案例一&quot;&gt;&lt;a href=&quot;#案例一&quot; class=&quot;headerlink&quot; title=&quot;案例一&quot;&gt;&lt;/a&gt;案例一&lt;/h3&gt;&lt;pre class=&quot;line-numbers language-javascript&quot;</summary>
        
      
    
    
    
    <category term="工程化" scheme="https://ghx9908.github.io/categories/%E5%B7%A5%E7%A8%8B%E5%8C%96/"/>
    
    
    <category term="eslint" scheme="https://ghx9908.github.io/tags/eslint/"/>
    
  </entry>
  
  <entry>
    <title>npm包详解</title>
    <link href="https://ghx9908.github.io/2024/10/17/npm-bao-xiang-jie/"/>
    <id>https://ghx9908.github.io/2024/10/17/npm-bao-xiang-jie/</id>
    <published>2024-10-17T17:51:54.000Z</published>
    <updated>2025-07-24T11:51:05.818Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;simple-import-sort&quot;&gt;&lt;a href=&quot;#simple-import-sort&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="工程化" scheme="https://ghx9908.github.io/categories/%E5%B7%A5%E7%A8%8B%E5%8C%96/"/>
    
    
    <category term="npm" scheme="https://ghx9908.github.io/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title>PostCSS</title>
    <link href="https://ghx9908.github.io/2024/10/17/posscss/"/>
    <id>https://ghx9908.github.io/2024/10/17/posscss/</id>
    <published>2024-10-17T17:30:11.000Z</published>
    <updated>2025-07-24T11:51:05.818Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;&lt;code&gt;PostCSS&lt;/code&gt; 是一个用于转换 CSS 的工具，它本质上是一个 JavaScript 插件系统，允许开发者通过编写或使用各种插件来对 CSS 进行处理和优化。它不像 Sass 或 LESS 那样是一个完整的 CSS</summary>
        
      
    
    
    
    <category term="工程化" scheme="https://ghx9908.github.io/categories/%E5%B7%A5%E7%A8%8B%E5%8C%96/"/>
    
    
    <category term="npm" scheme="https://ghx9908.github.io/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title>单点登录</title>
    <link href="https://ghx9908.github.io/2024/10/09/dan-dian-deng-lu/"/>
    <id>https://ghx9908.github.io/2024/10/09/dan-dian-deng-lu/</id>
    <published>2024-10-09T16:14:56.000Z</published>
    <updated>2025-07-24T11:51:05.818Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h3 id=&quot;单点登录（SSO）&quot;&gt;&lt;a href=&quot;#单点登录（SSO）&quot; class=&quot;headerlink&quot; title=&quot;单点登录（SSO）&quot;&gt;&lt;/a&gt;单点登录（SSO）&lt;/h3&gt;&lt;p&gt;参考文档：&lt;a</summary>
        
      
    
    
    
    
    <category term="工具" scheme="https://ghx9908.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>express</title>
    <link href="https://ghx9908.github.io/2024/10/08/express/"/>
    <id>https://ghx9908.github.io/2024/10/08/express/</id>
    <published>2024-10-08T14:48:34.000Z</published>
    <updated>2025-07-24T11:51:05.818Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h3 id=&quot;基本使用&quot;&gt;&lt;a href=&quot;#基本使用&quot; class=&quot;headerlink&quot; title=&quot;基本使用&quot;&gt;&lt;/a&gt;基本使用&lt;/h3&gt;&lt;pre class=&quot;line-numbers language-javascript&quot;</summary>
        
      
    
    
    
    
    <category term="node" scheme="https://ghx9908.github.io/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>jwt</title>
    <link href="https://ghx9908.github.io/2024/10/08/jwt/"/>
    <id>https://ghx9908.github.io/2024/10/08/jwt/</id>
    <published>2024-10-08T11:27:55.000Z</published>
    <updated>2025-07-24T11:51:05.818Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;1-JWT&quot;&gt;&lt;a href=&quot;#1-JWT&quot; class=&quot;headerlink&quot; title=&quot;1.JWT&quot;&gt;&lt;/a&gt;1.JWT&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;JWT(json web token)是为了在网络应用环境间传递声明而执行的一种基于 JSON</summary>
        
      
    
    
    
    
    <category term="node" scheme="https://ghx9908.github.io/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>cookie和session原理</title>
    <link href="https://ghx9908.github.io/2024/09/27/cookie-he-session-yuan-li/"/>
    <id>https://ghx9908.github.io/2024/09/27/cookie-he-session-yuan-li/</id>
    <published>2024-09-27T18:28:27.000Z</published>
    <updated>2025-07-24T11:51:05.818Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h3 id=&quot;Cookie-与-Session-的区别与理解&quot;&gt;&lt;a href=&quot;#Cookie-与-Session-的区别与理解&quot; class=&quot;headerlink&quot; title=&quot;Cookie 与 Session 的区别与理解&quot;&gt;&lt;/a&gt;&lt;strong&gt;Cookie 与</summary>
        
      
    
    
    
    
    <category term="node" scheme="https://ghx9908.github.io/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>koa底层实现</title>
    <link href="https://ghx9908.github.io/2024/09/26/koa-di-ceng-shi-xian/"/>
    <id>https://ghx9908.github.io/2024/09/26/koa-di-ceng-shi-xian/</id>
    <published>2024-09-26T15:25:43.000Z</published>
    <updated>2025-07-24T11:51:05.818Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;1-Koa&quot;&gt;&lt;a href=&quot;#1-Koa&quot; class=&quot;headerlink&quot; title=&quot;1.Koa&quot;&gt;&lt;/a&gt;1.Koa&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://koajs.com/&quot;&gt;Koa&lt;/a&gt;是一个由 Express</summary>
        
      
    
    
    
    
    <category term="node" scheme="https://ghx9908.github.io/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>Vue 中的diff算法？</title>
    <link href="https://ghx9908.github.io/2024/07/15/vue-zhong-de-diff-suan-fa/"/>
    <id>https://ghx9908.github.io/2024/07/15/vue-zhong-de-diff-suan-fa/</id>
    <published>2024-07-15T17:26:30.000Z</published>
    <updated>2025-07-24T11:51:05.818Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;前后元素不一致&quot;&gt;&lt;a href=&quot;#前后元素不一致&quot; class=&quot;headerlink&quot; title=&quot;前后元素不一致&quot;&gt;&lt;/a&gt;前后元素不一致&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;两个不同虚拟节点不需要进行比较，直接移除老节点，将新的虚拟节点渲染成真实</summary>
        
      
    
    
    
    <category term="前端框架" scheme="https://ghx9908.github.io/categories/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/"/>
    
    
    <category term="Vue" scheme="https://ghx9908.github.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>V8内存管理</title>
    <link href="https://ghx9908.github.io/2024/06/27/v8-nei-cun-guan-li/"/>
    <id>https://ghx9908.github.io/2024/06/27/v8-nei-cun-guan-li/</id>
    <published>2024-06-27T15:33:25.000Z</published>
    <updated>2025-07-24T11:51:05.818Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;V8 也会申请内存，申请的内存又会分为&lt;strong&gt;堆内存和栈内存&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;一、栈&quot;&gt;&lt;a href=&quot;#一、栈&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    
    <category term="网络" scheme="https://ghx9908.github.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>单页应用首屏加载速度慢的怎么解决？</title>
    <link href="https://ghx9908.github.io/2024/05/11/dan-ye-ying-yong-shou-ping-jia-zai-su-du-man-de-zen-me-jie-jue/"/>
    <id>https://ghx9908.github.io/2024/05/11/dan-ye-ying-yong-shou-ping-jia-zai-su-du-man-de-zen-me-jie-jue/</id>
    <published>2024-05-11T17:26:30.000Z</published>
    <updated>2025-07-24T11:51:05.817Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;ul&gt;
&lt;li&gt;使用路由懒加载、异步组件，实现组件拆分，减少入口文件体积大小,优化体验骨架屏&lt;/li&gt;
&lt;li&gt;抽离公共代码，采用 splitChunks 进行代码分割。&lt;/li&gt;
&lt;li&gt;组件加载采用按需加载的方式。&lt;/li&gt;
&lt;li&gt;静态资源缓存，采用 HTTP 缓存</summary>
        
      
    
    
    
    <category term="面试宝典" scheme="https://ghx9908.github.io/categories/%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8/"/>
    
    
    <category term="Vue.js" scheme="https://ghx9908.github.io/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>React中的diff算法？</title>
    <link href="https://ghx9908.github.io/2024/05/11/react-zhong-de-diff-suan-fa/"/>
    <id>https://ghx9908.github.io/2024/05/11/react-zhong-de-diff-suan-fa/</id>
    <published>2024-05-11T17:26:30.000Z</published>
    <updated>2025-07-24T11:51:05.818Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;React 的 diff 算法是 React 在更新 DOM 时使用的算法。它的目的是最小化页面的重新渲染，以便提高性能。&lt;/p&gt;
&lt;p&gt;当 React 渲染组件时，它会在内存中生成虚拟 DOM 树。然后，它会对比新的虚拟 DOM</summary>
        
      
    
    
    
    <category term="前端框架" scheme="https://ghx9908.github.io/categories/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/"/>
    
    
    <category term="React" scheme="https://ghx9908.github.io/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>Vue中的性能优化有哪些</title>
    <link href="https://ghx9908.github.io/2024/05/11/vue-zhong-de-xing-neng-you-hua-you-na-xie/"/>
    <id>https://ghx9908.github.io/2024/05/11/vue-zhong-de-xing-neng-you-hua-you-na-xie/</id>
    <published>2024-05-11T16:51:14.000Z</published>
    <updated>2025-07-24T11:51:05.817Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;ul&gt;
&lt;li&gt;Vue2 中数据层级不易过深，（会数据劫持每一层都增加getter和setter）.合理设置响应式数据；&lt;/li&gt;
&lt;li&gt;Vue2 非响应式数据可以通过 Object.freeze()方法冻结属性；&lt;/li&gt;
&lt;li&gt;Vue2 中采用函数式组件 -&amp;gt;</summary>
        
      
    
    
    
    <category term="面试宝典" scheme="https://ghx9908.github.io/categories/%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8/"/>
    
    
    <category term="Vue.js" scheme="https://ghx9908.github.io/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>函数组件的优势</title>
    <link href="https://ghx9908.github.io/2024/05/11/han-shu-zu-jian-de-you-shi/"/>
    <id>https://ghx9908.github.io/2024/05/11/han-shu-zu-jian-de-you-shi/</id>
    <published>2024-05-11T16:43:46.000Z</published>
    <updated>2025-07-24T11:51:05.817Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;函数式组件是一种定义&lt;strong&gt;自身没有任何状态的组件的方式。它们很像纯函数：接收 props，返回 vnodes&lt;/strong&gt;。函数式组件在渲染过程中不会创建组件实例 (也就是说，没有</summary>
        
      
    
    
    
    <category term="面试宝典" scheme="https://ghx9908.github.io/categories/%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8/"/>
    
    
    <category term="Vue.js" scheme="https://ghx9908.github.io/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>Vue.set方法是如何实现的</title>
    <link href="https://ghx9908.github.io/2024/03/28/vue-set-fang-fa-shi-ru-he-shi-xian-de/"/>
    <id>https://ghx9908.github.io/2024/03/28/vue-set-fang-fa-shi-ru-he-shi-xian-de/</id>
    <published>2024-03-28T17:32:45.000Z</published>
    <updated>2025-07-24T11:51:05.817Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;&lt;code&gt;Vue2&lt;/code&gt; 不允许在已经创建的实例上动态添加新的响应式属性。所以采用 set API 来进行实现。&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-typescript&quot;</summary>
        
      
    
    
    
    <category term="面试宝典" scheme="https://ghx9908.github.io/categories/%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8/"/>
    
    
    <category term="Vue.js" scheme="https://ghx9908.github.io/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>Vue组件中的data为什么必须是函数</title>
    <link href="https://ghx9908.github.io/2024/03/28/vue-zu-jian-zhong-de-data-wei-shi-me-bi-xu-shi-han-shu/"/>
    <id>https://ghx9908.github.io/2024/03/28/vue-zu-jian-zhong-de-data-wei-shi-me-bi-xu-shi-han-shu/</id>
    <published>2024-03-28T17:28:46.000Z</published>
    <updated>2025-07-24T11:51:05.817Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;ul&gt;
&lt;li&gt;根实例对象&lt;code&gt;data&lt;/code&gt;可以是对象也可以是函数“单例”，不会产生数据污染情况&lt;/li&gt;
&lt;li&gt;组件实例对象&lt;code&gt;data&lt;/code&gt;必须为函数，目的是为了防止多个组件实例对象之间共用一个&lt;code&gt;data&lt;/code&gt;，产生数据污</summary>
        
      
    
    
    
    <category term="面试宝典" scheme="https://ghx9908.github.io/categories/%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8/"/>
    
    
    <category term="Vue.js" scheme="https://ghx9908.github.io/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>Vue.extend方法的作用</title>
    <link href="https://ghx9908.github.io/2024/03/28/vue-extend-fang-fa-de-zuo-yong/"/>
    <id>https://ghx9908.github.io/2024/03/28/vue-extend-fang-fa-de-zuo-yong/</id>
    <published>2024-03-28T17:20:09.000Z</published>
    <updated>2025-07-24T11:51:05.817Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;1-1-Vue-extend-概念&quot;&gt;&lt;a href=&quot;#1-1-Vue-extend-概念&quot; class=&quot;headerlink&quot; title=&quot;1.1 Vue.extend 概念&quot;&gt;&lt;/a&gt;1.1 Vue.extend 概念&lt;/h2&gt;&lt;p&gt;使用基础 Vue</summary>
        
      
    
    
    
    <category term="面试宝典" scheme="https://ghx9908.github.io/categories/%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8/"/>
    
    
    <category term="Vue.js" scheme="https://ghx9908.github.io/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>说说你对双向绑定的理解,以及它的实现原理吗</title>
    <link href="https://ghx9908.github.io/2024/03/27/shuo-shuo-ni-dui-shuang-xiang-bang-ding-de-li-jie-yi-ji-ta-de-shi-xian-yuan-li-ma/"/>
    <id>https://ghx9908.github.io/2024/03/27/shuo-shuo-ni-dui-shuang-xiang-bang-ding-de-li-jie-yi-ji-ta-de-shi-xian-yuan-li-ma/</id>
    <published>2024-03-27T17:40:53.000Z</published>
    <updated>2025-07-24T11:51:05.817Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;1-1-双向绑定的概念&quot;&gt;&lt;a href=&quot;#1-1-双向绑定的概念&quot; class=&quot;headerlink&quot; title=&quot;1.1 双向绑定的概念&quot;&gt;&lt;/a&gt;1.1 双向绑定的概念&lt;/h2&gt;&lt;p&gt;vue 中双向绑定靠的是指令</summary>
        
      
    
    
    
    <category term="面试宝典" scheme="https://ghx9908.github.io/categories/%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8/"/>
    
    
    <category term="Vue.js" scheme="https://ghx9908.github.io/tags/Vue-js/"/>
    
  </entry>
  
</feed>
