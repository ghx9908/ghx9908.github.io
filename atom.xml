<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>闪烁之狐</title>
  
  <subtitle>闪烁之狐</subtitle>
  <link href="https://ghx9908.github.io/atom.xml" rel="self"/>
  
  <link href="https://ghx9908.github.io/"/>
  <updated>2024-06-27T07:14:46.608Z</updated>
  <id>https://ghx9908.github.io/</id>
  
  <author>
    <name>高红翔</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Vue 项目中有封装过 axios 吗？主要是封装哪方面的？</title>
    <link href="https://ghx9908.github.io/2024/05/11/vue-zhong-dui-axios-feng-zhuang-guo-na-fang-mian-de/"/>
    <id>https://ghx9908.github.io/2024/05/11/vue-zhong-dui-axios-feng-zhuang-guo-na-fang-mian-de/</id>
    <published>2024-05-11T17:51:14.000Z</published>
    <updated>2024-06-27T07:14:46.608Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;ul&gt;
&lt;li&gt;设置请求超时时间。&lt;/li&gt;
&lt;li&gt;根据项目环境设置请求路径。&lt;/li&gt;
&lt;li&gt;设置请求拦截，自动添加 Token。&lt;/li&gt;
&lt;li&gt;设置响应拦截，对响应的状态码或者数据进行格式化。&lt;/li&gt;
&lt;li&gt;增添请求队列，实现 loading</summary>
        
      
    
    
    
    <category term="面试宝典" scheme="https://ghx9908.github.io/categories/%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8/"/>
    
    
    <category term="Vue.js" scheme="https://ghx9908.github.io/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>单页应用首屏加载速度慢的怎么解决？</title>
    <link href="https://ghx9908.github.io/2024/05/11/dan-ye-ying-yong-shou-ping-jia-zai-su-du-man-de-zen-me-jie-jue/"/>
    <id>https://ghx9908.github.io/2024/05/11/dan-ye-ying-yong-shou-ping-jia-zai-su-du-man-de-zen-me-jie-jue/</id>
    <published>2024-05-11T17:26:30.000Z</published>
    <updated>2024-06-27T07:14:46.608Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;ul&gt;
&lt;li&gt;使用路由懒加载、异步组件，实现组件拆分，减少入口文件体积大小,优化体验骨架屏&lt;/li&gt;
&lt;li&gt;抽离公共代码，采用 splitChunks 进行代码分割。&lt;/li&gt;
&lt;li&gt;组件加载采用按需加载的方式。&lt;/li&gt;
&lt;li&gt;静态资源缓存，采用 HTTP 缓存</summary>
        
      
    
    
    
    <category term="面试宝典" scheme="https://ghx9908.github.io/categories/%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8/"/>
    
    
    <category term="Vue.js" scheme="https://ghx9908.github.io/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>Vue中的性能优化有哪些</title>
    <link href="https://ghx9908.github.io/2024/05/11/vue-zhong-de-xing-neng-you-hua-you-na-xie/"/>
    <id>https://ghx9908.github.io/2024/05/11/vue-zhong-de-xing-neng-you-hua-you-na-xie/</id>
    <published>2024-05-11T16:51:14.000Z</published>
    <updated>2024-06-27T07:14:46.608Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;ul&gt;
&lt;li&gt;Vue2 中数据层级不易过深，（会数据劫持每一层都增加getter和setter）.合理设置响应式数据；&lt;/li&gt;
&lt;li&gt;Vue2 非响应式数据可以通过 Object.freeze()方法冻结属性；&lt;/li&gt;
&lt;li&gt;Vue2 中采用函数式组件 -&amp;gt;</summary>
        
      
    
    
    
    <category term="面试宝典" scheme="https://ghx9908.github.io/categories/%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8/"/>
    
    
    <category term="Vue.js" scheme="https://ghx9908.github.io/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>函数组件的优势</title>
    <link href="https://ghx9908.github.io/2024/05/11/han-shu-zu-jian-de-you-shi/"/>
    <id>https://ghx9908.github.io/2024/05/11/han-shu-zu-jian-de-you-shi/</id>
    <published>2024-05-11T16:43:46.000Z</published>
    <updated>2024-06-27T07:14:46.608Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;函数式组件是一种定义&lt;strong&gt;自身没有任何状态的组件的方式。它们很像纯函数：接收 props，返回 vnodes&lt;/strong&gt;。函数式组件在渲染过程中不会创建组件实例 (也就是说，没有</summary>
        
      
    
    
    
    <category term="面试宝典" scheme="https://ghx9908.github.io/categories/%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8/"/>
    
    
    <category term="Vue.js" scheme="https://ghx9908.github.io/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>Vue常用的修饰符有哪些有什么应用场景</title>
    <link href="https://ghx9908.github.io/2024/05/11/vue-chang-yong-de-xiu-shi-fu-you-na-xie-you-shi-me-ying-yong-chang-jing/"/>
    <id>https://ghx9908.github.io/2024/05/11/vue-chang-yong-de-xiu-shi-fu-you-na-xie-you-shi-me-ying-yong-chang-jing/</id>
    <published>2024-05-11T16:27:43.000Z</published>
    <updated>2024-06-27T07:14:46.608Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;ul&gt;
&lt;li&gt;表单修饰符 lazy、trim、number&lt;/li&gt;
&lt;li&gt;事件修饰符 stop、prevent、self、once、capture、passive、.native&lt;/li&gt;
&lt;li&gt;鼠标按键修饰符</summary>
        
      
    
    
    
    <category term="面试宝典" scheme="https://ghx9908.github.io/categories/%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8/"/>
    
    
    <category term="Vue.js" scheme="https://ghx9908.github.io/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>Vue.set方法是如何实现的</title>
    <link href="https://ghx9908.github.io/2024/03/28/vue-set-fang-fa-shi-ru-he-shi-xian-de/"/>
    <id>https://ghx9908.github.io/2024/03/28/vue-set-fang-fa-shi-ru-he-shi-xian-de/</id>
    <published>2024-03-28T17:32:45.000Z</published>
    <updated>2024-06-27T07:14:46.608Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;&lt;code&gt;Vue2&lt;/code&gt; 不允许在已经创建的实例上动态添加新的响应式属性。所以采用 set API 来进行实现。&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-typescript&quot;</summary>
        
      
    
    
    
    <category term="面试宝典" scheme="https://ghx9908.github.io/categories/%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8/"/>
    
    
    <category term="Vue.js" scheme="https://ghx9908.github.io/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>Vue组件中的data为什么必须是函数</title>
    <link href="https://ghx9908.github.io/2024/03/28/vue-zu-jian-zhong-de-data-wei-shi-me-bi-xu-shi-han-shu/"/>
    <id>https://ghx9908.github.io/2024/03/28/vue-zu-jian-zhong-de-data-wei-shi-me-bi-xu-shi-han-shu/</id>
    <published>2024-03-28T17:28:46.000Z</published>
    <updated>2024-06-27T07:14:46.608Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;ul&gt;
&lt;li&gt;根实例对象&lt;code&gt;data&lt;/code&gt;可以是对象也可以是函数“单例”，不会产生数据污染情况&lt;/li&gt;
&lt;li&gt;组件实例对象&lt;code&gt;data&lt;/code&gt;必须为函数，目的是为了防止多个组件实例对象之间共用一个&lt;code&gt;data&lt;/code&gt;，产生数据污</summary>
        
      
    
    
    
    <category term="面试宝典" scheme="https://ghx9908.github.io/categories/%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8/"/>
    
    
    <category term="Vue.js" scheme="https://ghx9908.github.io/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>Vue.extend方法的作用</title>
    <link href="https://ghx9908.github.io/2024/03/28/vue-extend-fang-fa-de-zuo-yong/"/>
    <id>https://ghx9908.github.io/2024/03/28/vue-extend-fang-fa-de-zuo-yong/</id>
    <published>2024-03-28T17:20:09.000Z</published>
    <updated>2024-06-27T07:14:46.608Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;1-1-Vue-extend-概念&quot;&gt;&lt;a href=&quot;#1-1-Vue-extend-概念&quot; class=&quot;headerlink&quot; title=&quot;1.1 Vue.extend 概念&quot;&gt;&lt;/a&gt;1.1 Vue.extend 概念&lt;/h2&gt;&lt;p&gt;使用基础 Vue</summary>
        
      
    
    
    
    <category term="面试宝典" scheme="https://ghx9908.github.io/categories/%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8/"/>
    
    
    <category term="Vue.js" scheme="https://ghx9908.github.io/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>说说你对双向绑定的理解,以及它的实现原理吗</title>
    <link href="https://ghx9908.github.io/2024/03/27/shuo-shuo-ni-dui-shuang-xiang-bang-ding-de-li-jie-yi-ji-ta-de-shi-xian-yuan-li-ma/"/>
    <id>https://ghx9908.github.io/2024/03/27/shuo-shuo-ni-dui-shuang-xiang-bang-ding-de-li-jie-yi-ji-ta-de-shi-xian-yuan-li-ma/</id>
    <published>2024-03-27T17:40:53.000Z</published>
    <updated>2024-06-27T07:14:46.608Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;1-1-双向绑定的概念&quot;&gt;&lt;a href=&quot;#1-1-双向绑定的概念&quot; class=&quot;headerlink&quot; title=&quot;1.1 双向绑定的概念&quot;&gt;&lt;/a&gt;1.1 双向绑定的概念&lt;/h2&gt;&lt;p&gt;vue 中双向绑定靠的是指令</summary>
        
      
    
    
    
    <category term="面试宝典" scheme="https://ghx9908.github.io/categories/%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8/"/>
    
    
    <category term="Vue.js" scheme="https://ghx9908.github.io/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>Vue.use是干什么的</title>
    <link href="https://ghx9908.github.io/2024/03/27/vue-use-shi-gan-shi-me-de/"/>
    <id>https://ghx9908.github.io/2024/03/27/vue-use-shi-gan-shi-me-de/</id>
    <published>2024-03-27T17:28:27.000Z</published>
    <updated>2024-06-27T07:14:46.608Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;1-use-概念&quot;&gt;&lt;a href=&quot;#1-use-概念&quot; class=&quot;headerlink&quot; title=&quot;.1 use 概念&quot;&gt;&lt;/a&gt;.1 use 概念&lt;/h2&gt;&lt;p&gt;安装 Vue.js 插件。如果插件是一个对象，必须提供 install</summary>
        
      
    
    
    
    <category term="面试宝典" scheme="https://ghx9908.github.io/categories/%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8/"/>
    
    
    <category term="Vue.js" scheme="https://ghx9908.github.io/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>Vue.mixin的使用场景和原理</title>
    <link href="https://ghx9908.github.io/2024/03/27/vue-mixin-de-shi-yong-chang-jing-he-yuan-li/"/>
    <id>https://ghx9908.github.io/2024/03/27/vue-mixin-de-shi-yong-chang-jing-he-yuan-li/</id>
    <published>2024-03-27T17:17:14.000Z</published>
    <updated>2024-06-27T07:14:46.608Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;1-1-Vue-mixin-概念&quot;&gt;&lt;a href=&quot;#1-1-Vue-mixin-概念&quot; class=&quot;headerlink&quot; title=&quot;1.1 Vue.mixin 概念&quot;&gt;&lt;/a&gt;1.1 Vue.mixin 概念&lt;/h2&gt;&lt;p&gt;mixin</summary>
        
      
    
    
    
    <category term="面试宝典" scheme="https://ghx9908.github.io/categories/%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8/"/>
    
    
    <category term="Vue.js" scheme="https://ghx9908.github.io/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>说是vue的声明周期</title>
    <link href="https://ghx9908.github.io/2024/03/26/shuo-shi-vue-de-sheng-ming-zhou-qi/"/>
    <id>https://ghx9908.github.io/2024/03/26/shuo-shi-vue-de-sheng-ming-zhou-qi/</id>
    <published>2024-03-26T16:05:00.000Z</published>
    <updated>2024-06-27T07:14:46.608Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;1-1-Vue2-中的生命周期&quot;&gt;&lt;a href=&quot;#1-1-Vue2-中的生命周期&quot; class=&quot;headerlink&quot; title=&quot;1.1 Vue2 中的生命周期&quot;&gt;&lt;/a&gt;1.1 Vue2 中的生命周期&lt;/h2&gt;&lt;p&gt;主要的生命周期有：创建前后,</summary>
        
      
    
    
    
    <category term="面试宝典" scheme="https://ghx9908.github.io/categories/%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8/"/>
    
    
    <category term="Vue.js" scheme="https://ghx9908.github.io/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>v-once的使用场景有哪些</title>
    <link href="https://ghx9908.github.io/2024/03/25/v-once-de-shi-yong-chang-jing-you-na-xie/"/>
    <id>https://ghx9908.github.io/2024/03/25/v-once-de-shi-yong-chang-jing-you-na-xie/</id>
    <published>2024-03-25T17:05:57.000Z</published>
    <updated>2024-06-27T07:14:46.608Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;ul&gt;
&lt;li&gt;v-once 是 Vue 中内置指令，只渲染元素和组件一次。随后的重新渲染，元素/组件及其所有的子节点将被视为静态内容并跳过。这可以用于优化更新性能。&lt;br&gt;&lt;strong&gt;核心实现原理是利用缓存&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre</summary>
        
      
    
    
    
    <category term="面试宝典" scheme="https://ghx9908.github.io/categories/%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8/"/>
    
    
    <category term="Vue.js" scheme="https://ghx9908.github.io/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>v-if和v-for哪个优先级更高</title>
    <link href="https://ghx9908.github.io/2024/03/25/v-if-he-v-for-na-ge-you-xian-ji-geng-gao/"/>
    <id>https://ghx9908.github.io/2024/03/25/v-if-he-v-for-na-ge-you-xian-ji-geng-gao/</id>
    <published>2024-03-25T16:49:00.000Z</published>
    <updated>2024-06-27T07:14:46.608Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;p&gt;同时使用 v-if 和 v-for 是不推荐的，因为这样二者的优先级不明显。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在 Vue3 中 v-if 的优先级高于 v-for，这意味着 v-if 的条件将无法访问到 v-for</summary>
        
      
    
    
    
    <category term="面试宝典" scheme="https://ghx9908.github.io/categories/%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8/"/>
    
    
    <category term="Vue.js" scheme="https://ghx9908.github.io/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>Vue中的v-show和v-if怎么理解</title>
    <link href="https://ghx9908.github.io/2024/03/25/vue-zhong-de-v-show-he-v-if-zen-me-li-jie/"/>
    <id>https://ghx9908.github.io/2024/03/25/vue-zhong-de-v-show-he-v-if-zen-me-li-jie/</id>
    <published>2024-03-25T16:45:54.000Z</published>
    <updated>2024-06-27T07:14:46.608Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;p&gt;v-if 是“真实的”按条件渲染，因为它确保了在切换时，条件区块内的事件监听器和子组件都会被销毁与重建。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;v-if 也是惰性的：(可以阻断内部代码是否执行),如果在初次渲染时条件值为</summary>
        
      
    
    
    
    <category term="面试宝典" scheme="https://ghx9908.github.io/categories/%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8/"/>
    
    
    <category term="Vue.js" scheme="https://ghx9908.github.io/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>如何看待CompositionAPI和OptionsAPI</title>
    <link href="https://ghx9908.github.io/2024/03/25/ru-he-kan-dai-compositionapi-he-optionsapi/"/>
    <id>https://ghx9908.github.io/2024/03/25/ru-he-kan-dai-compositionapi-he-optionsapi/</id>
    <published>2024-03-25T16:39:06.000Z</published>
    <updated>2024-06-27T07:14:46.608Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;ul&gt;
&lt;li&gt;在 Vue2 中采用的是 OptionsAPI, 用户提供的 data,props,methods,computed,watch 等属性 (用户编写复杂业务逻辑会出现反复横跳问题)&lt;/li&gt;
&lt;li&gt;Vue2</summary>
        
      
    
    
    
    <category term="面试宝典" scheme="https://ghx9908.github.io/categories/%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8/"/>
    
    
    <category term="Vue.js" scheme="https://ghx9908.github.io/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>Vue3对⽐Vue2的变化</title>
    <link href="https://ghx9908.github.io/2024/03/25/vue3-dui-vue2-de-bian-hua/"/>
    <id>https://ghx9908.github.io/2024/03/25/vue3-dui-vue2-de-bian-hua/</id>
    <published>2024-03-25T16:24:01.000Z</published>
    <updated>2024-06-27T07:14:46.608Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;ul&gt;
&lt;li&gt;性能优化（更快）：&lt;ul&gt;
&lt;li&gt;使用了&lt;strong&gt;Proxy&lt;/strong&gt;替代 Object.defineProperty 实现响应式。（为什么？defineProperty</summary>
        
      
    
    
    
    <category term="面试宝典" scheme="https://ghx9908.github.io/categories/%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8/"/>
    
    
    <category term="Vue.js" scheme="https://ghx9908.github.io/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>你知道哪些Vue3新特性</title>
    <link href="https://ghx9908.github.io/2024/03/25/ni-zhi-dao-na-xie-vue3-xin-te-xing/"/>
    <id>https://ghx9908.github.io/2024/03/25/ni-zhi-dao-na-xie-vue3-xin-te-xing/</id>
    <published>2024-03-25T15:19:24.000Z</published>
    <updated>2024-06-27T07:14:46.608Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Composition API&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用函数的方式编写 vue 组件。&lt;/li&gt;
&lt;li&gt;组合式 API (响应式 API</summary>
        
      
    
    
    
    <category term="面试宝典" scheme="https://ghx9908.github.io/categories/%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8/"/>
    
    
    <category term="Vue.js" scheme="https://ghx9908.github.io/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>谈谈Vue3中模板编译做了哪些优化</title>
    <link href="https://ghx9908.github.io/2024/03/25/tan-tan-vue3-zhong-mo-ban-bian-yi-zuo-liao-na-xie-you-hua/"/>
    <id>https://ghx9908.github.io/2024/03/25/tan-tan-vue3-zhong-mo-ban-bian-yi-zuo-liao-na-xie-you-hua/</id>
    <published>2024-03-25T14:51:50.000Z</published>
    <updated>2024-06-27T07:14:46.608Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;1-1-PatchFlags-优化&quot;&gt;&lt;a href=&quot;#1-1-PatchFlags-优化&quot; class=&quot;headerlink&quot; title=&quot;1.1 PatchFlags 优化&quot;&gt;&lt;/a&gt;1.1 PatchFlags 优化&lt;/h2&gt;&lt;p&gt;Diff</summary>
        
      
    
    
    
    <category term="面试宝典" scheme="https://ghx9908.github.io/categories/%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8/"/>
    
    
    <category term="Vue.js" scheme="https://ghx9908.github.io/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>key的作用和原理</title>
    <link href="https://ghx9908.github.io/2024/03/22/key-de-zuo-yong-he-yuan-li/"/>
    <id>https://ghx9908.github.io/2024/03/22/key-de-zuo-yong-he-yuan-li/</id>
    <published>2024-03-22T15:56:02.000Z</published>
    <updated>2024-06-27T07:14:46.608Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;1-1-key-的概念&quot;&gt;&lt;a href=&quot;#1-1-key-的概念&quot; class=&quot;headerlink&quot; title=&quot;1.1 key 的概念&quot;&gt;&lt;/a&gt;1.1 key 的概念&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;key 的特殊 attribute 主要用在</summary>
        
      
    
    
    
    <category term="面试宝典" scheme="https://ghx9908.github.io/categories/%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8/"/>
    
    
    <category term="Vue.js" scheme="https://ghx9908.github.io/tags/Vue-js/"/>
    
  </entry>
  
</feed>
